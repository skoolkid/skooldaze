; Copyright 2008-2015, 2017, 2019 Richard Dymond (rjdymond@gmail.com)

[Page:PlayArea]
PageContent=<div>#CALL:play_area(play_area,0,0,96,21,2,0,8)</div>

[Page:PlayAreaTiles]
JavaScript=tiles.js
PageContent=#INCLUDE(PlayAreaTiles)

[PlayAreaTiles]
<p>Click a tile to see the following info:</p>
<table>
<tr>
<td>
<div class="B">
<div class="H">(x,y)=(10,9)</div>
<table>
<tr>
<td><img alt="10,9" src="#IF({vars[pub]}>2)(../)../images/patiles/80db20.png"/></td>
<td>
<i>ref_addr</i>=(x,y+#b152)=#w41226<br/>
<i>ref</i>=#b219, <i>udg_page</i>=#b128<br/>
<i>udg_addr</i>=(<i>ref</i>,<i>udg_page</i>)=#w32987<br/>
<i>attr_addr</i>=(x+#b128,y+#b152)=#w41354<br/>
<i>attr</i>=#b32
</td>
</tr>
</table>
</div>
</td>
</tr>
</table>
<p>where:</p>
<ul>
<li>
<i>ref</i> is the UDG reference for the tile (located at <i>ref_addr</i>)
</li>
<li>
<i>udg_page</i> is the base page for the tile graphic data (#b128, #b136 or
#b144)
</li>
<li>
<i>udg_addr</i> is the base address of the tile graphic data
(<i>ref</i>+#w256*<i>udg_page</i>)
</li>
<li>
<i>attr</i> is the tile's attribute byte (located at <i>attr_addr</i>)
</li>
</ul>
<p>
The base page for the tile graphic data (<i>udg_page</i>) depends on the
x-coordinate of the tile as follows:
</p>
<table class="default">
<tr><th>x</th><th><i>udg_page</i></th></tr>
<tr><td class="centre">0-31</td><td class="centre">#b128</td></tr>
<tr><td class="centre">32-63</td><td class="centre">#b136</td></tr>
<tr><td class="centre">64-95</td><td class="centre">#b144</td></tr>
</table>
<p>
The eight graphic bytes for a tile are located thus:
</p>
<table class="default">
<tr>
<th>Address</th><th>Contents</th>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>)=<i>udg_addr</i></td>
<td>Graphic byte 1/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+1)=<i>udg_addr</i>+#w256</td>
<td>Graphic byte 2/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+2)=<i>udg_addr</i>+#w512</td>
<td>Graphic byte 3/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+3)=<i>udg_addr</i>+#w768</td>
<td>Graphic byte 4/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+4)=<i>udg_addr</i>+#w1024</td>
<td>Graphic byte 5/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+5)=<i>udg_addr</i>+#w1280</td>
<td>Graphic byte 6/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+6)=<i>udg_addr</i>+#w1536</td>
<td>Graphic byte 7/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+7)=<i>udg_addr</i>+#w1792</td>
<td>Graphic byte 8/8</td>
</tr>
</table>
<p>
Any given tile (identified by <i>udg_addr</i>) may appear at more than one
location in the play area.
</p>
#CALL:play_area_tiles(96,21)

[Template:play_area_tiles]
<table class="tiles">
{rows}
</table>

[Template:play_area_tile_row]
<tr>
{tiles}
</tr>

[Template:play_area_tile]
<td>
<div class="T" onclick="s('s{x}x{y}')">
{img}
</div>
<div id="s{x}x{y}" class="B P" onclick="h(this)">
<div class="H">(x,y)=({x},{y})</div>
<table>
<tr>
<td>{img}</td>
<td>
<i>ref_addr</i>=(x,y+{y_offset})={ref_addr}<br/>
<i>ref</i>={ref}, <i>udg_page</i>={udg_page}<br/>
<i>udg_addr</i>=(<i>ref</i>,<i>udg_page</i>)={udg_addr}<br/>
<i>attr_addr</i>=(x+{x_offset},y+{y_offset})={attr_addr}<br/>
<i>attr</i>={attr}
</td>
</tr>
</table>
</div>
</td>

[Page:InitialAnimatoryStates]
PageContent=#INCLUDE(InitialAnimatoryStates)

[InitialAnimatoryStates]
#PUSHS
#POKES56576,17,21
<div>#CALL:play_area(initial_as,0,0,96,21,2,1,8)</div>
#POPS

[Page:AnimatoryStates]
PageContent=#INCLUDE(AnimatoryStatesPage)

[AnimatoryStatesPage]
<p>The appearance of an animatory state depends on the character using it. In
each row of the table below, the first and second images correspond to the
appearance of the animatory state when used by a boy or a catapult pellet
(character numbers #b152-#b162 and #b167-#b172); the third and fourth images
correspond to the appearance of the animatory state when used by a teacher
(character numbers #b163-#b166). (See #R27914.)</p>
<table class="animatoryStates">
#CALL:animatory_states()
</table>

[Template:animatory_state_row]
<tr>
<td id="{state_l}">{img_l1}</td>
<td id="{state_r}">{img_r1}</td>
<td>{img_l2}</td>
<td>{img_r2}</td>
<td>{state_l_s}, {state_r_s}: {desc}</td>
</tr>

[Page:AnimatoryStateTiles]
JavaScript=tiles.js
PageContent=#INCLUDE(AnimatoryStateTiles)

[AnimatoryStateTiles]
<div>
<p>Click a tile in the gallery below to see the following info:</p>
<table>
<tr>
<td>
<div class="B">
<div class="H">#b0: row 1, column 1</div>
<table>
<tr>
<td><img alt="#b0:1,1" src="#IF({vars[pub]}>2)(../)../images/astiles/b901.png"/></td>
<td>
<i>lsb</i>=#b0, <i>ref_page</i>=#b178<br/>
<i>ref_addr</i>=(<i>lsb</i>,<i>ref_page</i>)=#w45568<br/>
<i>ref</i>=#b1, <i>udg_page</i>=#b185<br/>
<i>udg_addr</i>=(<i>ref</i>,<i>udg_page</i>)=#w47361
</td>
</tr>
</table>
</div>
</td>
</tr>
</table>
<p>where:</p>
<ul>
<li>
<i>lsb</i> is the animatory state (#b0-#b255)
</li>
<li>
<i>ref_page</i> is the page containing the UDG reference for the tile
(#b173-#b184)
</li>
<li>
<i>ref_addr</i> is the address of the UDG reference
(<i>lsb</i>+#w256*<i>ref_page</i>)
</li>
<li>
<i>ref</i> is the UDG reference at <i>ref_addr</i> (#b0-#b255)
</li>
<li>
<i>udg_page</i> is the base page for the tile graphic data (#b185 or #b201)
</li>
<li>
<i>udg_addr</i> is the base address of the tile graphic data
(<i>ref</i>+#w256*<i>udg_page</i>)
</li>
</ul>
<p>
The graphic for an animatory state is made up of 12 tiles in a 3x4 grid:
</p>
<table class="asgrid">
<tr><td>0</td><td>4</td><td>8</td></tr>
<tr><td>1</td><td>5</td><td>9</td></tr>
<tr><td>2</td><td>6</td><td>10</td></tr>
<tr><td>3</td><td>7</td><td>11</td></tr>
</table>
<p>
Each tile has a UDG reference (<i>ref</i>) located at (<i>lsb</i>,T+#b173),
where T is the tile number (0-11).
</p>
<p>
The eight graphic bytes and eight mask bytes for a tile are located thus:
</p>
<table class="default">
<tr><th>Address</th><th>Contents</th></tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>)=<i>udg_addr</i></td>
<td>Graphic byte 1/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b1)=<i>udg_addr</i>+#w256</td>
<td>Mask byte 1/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b2)=<i>udg_addr</i>+#w512</td>
<td>Graphic byte 2/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b3)=<i>udg_addr</i>+#w768</td>
<td>Mask byte 2/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b4)=<i>udg_addr</i>+#w1024</td>
<td>Graphic byte 3/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b5)=<i>udg_addr</i>+#w1280</td>
<td>Mask byte 3/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b6)=<i>udg_addr</i>+#w1536</td>
<td>Graphic byte 4/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b7)=<i>udg_addr</i>+#w1792</td>
<td>Mask byte 4/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b8)=<i>udg_addr</i>+#w2048</td>
<td>Graphic byte 5/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b9)=<i>udg_addr</i>+#w2304</td>
<td>Mask byte 5/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b10)=<i>udg_addr</i>+#w2560</td>
<td>Graphic byte 6/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b11)=<i>udg_addr</i>+#w2816</td>
<td>Mask byte 6/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b12)=<i>udg_addr</i>+#w3072</td>
<td>Graphic byte 7/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b13)=<i>udg_addr</i>+#w3328</td>
<td>Mask byte 7/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b14)=<i>udg_addr</i>+#w3584</td>
<td>Graphic byte 8/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b15)=<i>udg_addr</i>+#w3840</td>
<td>Mask byte 8/8</td>
</tr>
</table>
<p>
The 'null' UDG (<i>ref</i>=#b0) is always taken to be blank (eight zeroes); its
graphic data is not looked up at (#b0,#b185) or (#b0,#b201).
</p>
<p>
Any given tile (identified by <i>udg_addr</i>) may appear in more than one
animatory state (and in more than one place in a single animatory state).
</p>
<p>
In each row of the table below, the first and second tile grids correspond to
the appearance of the animatory state with <i>udg_page</i>=#b185 (as used by a
boy or a catapult pellet, i.e. character numbers #b152-#b162 and #b167-#b172);
the third and fourth tile grids correspond to the appearance of the animatory
state with <i>udg_page</i>=#b201 (as used by a teacher, i.e. character numbers
#b163-#b166). (See #R27914.)
</p>
</div>
<table class="asTiles">
#CALL:astiles()
</table>

[Template:astiles_row]
<tr>
{frames}
<td>{desc}</td>
</tr>

[Template:astiles_frame_4x3]
<td>
<table class="A">
<tr>
<td>{tiles[0]}</td>
<td>{tiles[1]}</td>
<td>{tiles[2]}</td>
</tr>
<tr>
<td>{tiles[3]}</td>
<td>{tiles[4]}</td>
<td>{tiles[5]}</td>
</tr>
<tr>
<td>{tiles[6]}</td>
<td>{tiles[7]}</td>
<td>{tiles[8]}</td>
</tr>
<tr>
<td>{tiles[9]}</td>
<td>{tiles[10]}</td>
<td>{tiles[11]}</td>
</tr>
</table>
</td>

[Template:astile]
<div class="T" onclick="s('{bubble_id}')">
{img}
</div>
<div id="{bubble_id}" class="B P" onclick="h(this)">
<div class="H">{state}: row {row}, column {column}</div>
<table>
<tr>
<td>{img}</td>
<td>
<i>lsb</i>={lsb}, <i>ref_page</i>={ref_page}<br/>
<i>ref_addr</i>=(<i>lsb</i>,<i>ref_page</i>)={ref_addr}<br/>
<i>ref</i>={ref}, <i>udg_page</i>={udg_page}<br/>
<i>udg_addr</i>=(<i>ref</i>,<i>udg_page</i>)={udg_addr}
</td>
</tr>
</table>
</div>

[Template:astile_null]
<div class="T" onclick="s('{bubble_id}')">
{img}
</div>
<div id="{bubble_id}" class="B P" onclick="h(this)">
<div class="H">{state}: row {row}, column {column}</div>
<table>
<tr>
<td>{img}</td>
<td>
<i>lsb</i>={lsb}, <i>ref_page</i>={ref_page}<br/>
<i>ref_addr</i>=(<i>lsb</i>,<i>ref_page</i>)={ref_addr}<br/>
<i>ref</i>={ref}
</td>
</tr>
</table>
</div>

[Page:CharacterBuffers]
PageContent=#INCLUDE(CharacterBuffers)

[CharacterBuffers]
<p>The character buffers occupy bytes #b96-#b127 in pages #b152-#b172.</p>
#CALL:cast()
#CALL:cbuffer()

[Template:cast]
#TABLE(cbuffer,cbufPage,cbufAddress,cbufCharacter,transparent,cbufPage,cbufAddress,cbufCharacter,transparent,cbufPage,cbufAddress,cbufCharacter)
{{ =h Page | =h Address | =h Character      |  | =h Page | =h Address | =h Character      |  | =h Page | =h Address | =h Character }}
{{ #b152   | #R39008    | {characters[152]} |  | #b159   | #R40800    | {characters[159]} |  | #b166   | #R42592    | {characters[166]} }}
{{ #b153   | #R39264    | {characters[153]} |  | #b160   | #R41056    | {characters[160]} |  | #b167   | #R42848    | {characters[167]} }}
{{ #b154   | #R39520    | {characters[154]} |  | #b161   | #R41312    | {characters[161]} |  | #b168   | #R43104    | {characters[168]} }}
{{ #b155   | #R39776    | {characters[155]} |  | #b162   | #R41568    | {characters[162]} |  | #b169   | #R43360    | {characters[169]} }}
{{ #b156   | #R40032    | {characters[156]} |  | #b163   | #R41824    | {characters[163]} |  | #b170   | #R43616    | {characters[170]} }}
{{ #b157   | #R40288    | {characters[157]} |  | #b164   | #R42080    | {characters[164]} |  | #b171   | #R43872    | {characters[171]} }}
{{ #b158   | #R40544    | {characters[158]} |  | #b165   | #R42336    | {characters[165]} |  | #b172   | #R44128    | {characters[172]} }}
TABLE#

[Template:cbuffer]
<p>The bytes in each character buffer are used as follows:</p>
<table class="cbuffer">
<tr>
<th>Byte(s)</th>
<th>Contents</th>
</tr>
{m_cbuffer_bytes}
</table>

[Template:cbuffer_bytes]
<tr>
<td class="cbufBytes" rowspan="{rowspan}">{bytes}</td>
{t_cbuffer_desc}
</tr>
{m_cbuffer_desc_row}

[Template:cbuffer_desc_row]
<tr>
{t_cbuffer_desc}
</tr>

[Template:cbuffer_desc]
<td class="cbufByteDesc">
{desc}
</td>

[Page:MainTimetable]
Content=asm/#N65024.html

[Page:PersonalTimetables]
PageContent=#INCLUDE(PersonalTimetables)

[PersonalTimetables]
<table class="timetable">
<tr>
<th>No.</th>
<th>Character</th>
</tr>
#CALL:personal_timetables()
</table>

[Template:personal_timetable]
<tr>
<td class="ptCharNum">#R{address}({num})</td>
<td class="ptCharName">{name}</td>
</tr>

[Page:LessonIndex]
PageContent=#INCLUDE(LessonIndex)

[LessonIndex]
<table class="lesson">
<tr>
<th>ID</th>
<th>Lesson</th>
</tr>
#CALL:lesson_index()
</table>

[Template:lesson_type]
<tr>
<td class="lessonType">#LESSON{type}</td>
<td class="lesson">{description}</td>
</tr>

[Page:Lesson224]
PageContent=#CALL:lesson(224)

[Page:Lesson225]
PageContent=#CALL:lesson(225)

[Page:Lesson226]
PageContent=#CALL:lesson(226)

[Page:Lesson227]
PageContent=#CALL:lesson(227)

[Page:Lesson228]
PageContent=#CALL:lesson(228)

[Page:Lesson229]
PageContent=#CALL:lesson(229)

[Page:Lesson230]
PageContent=#CALL:lesson(230)

[Page:Lesson231]
PageContent=#CALL:lesson(231)

[Page:Lesson232]
PageContent=#CALL:lesson(232)

[Page:Lesson233]
PageContent=#CALL:lesson(233)

[Page:Lesson234]
PageContent=#CALL:lesson(234)

[Page:Lesson235]
PageContent=#CALL:lesson(235)

[Page:Lesson236]
PageContent=#CALL:lesson(236)

[Page:Lesson237]
PageContent=#CALL:lesson(237)

[Page:Lesson238]
PageContent=#CALL:lesson(238)

[Page:Lesson239]
PageContent=#CALL:lesson(239)

[Page:Lesson240]
PageContent=#CALL:lesson(240)

[Page:Lesson241]
PageContent=#CALL:lesson(241)

[Page:Lesson242]
PageContent=#CALL:lesson(242)

[Page:Lesson243]
PageContent=#CALL:lesson(243)

[Page:Lesson244]
PageContent=#CALL:lesson(244)

[Page:Lesson245]
PageContent=#CALL:lesson(245)

[Page:Lesson246]
PageContent=#CALL:lesson(246)

[Page:Lesson247]
PageContent=#CALL:lesson(247)

[Page:Lesson248]
PageContent=#CALL:lesson(248)

[Page:Lesson249]
PageContent=#CALL:lesson(249)

[Page:Lesson250]
PageContent=#CALL:lesson(250)

[Page:Lesson251]
PageContent=#CALL:lesson(251)

[Page:Lesson252]
PageContent=#CALL:lesson(252)

[Page:Lesson253]
PageContent=#CALL:lesson(253)

[Page:Lesson254]
PageContent=#CALL:lesson(254)

[Page:Lesson255]
PageContent=#CALL:lesson(255)

[Page:CommandLists]
Content=asm/#N65152.html

[Template:lesson]
<table class="asm-navigation">
<tr>
<td class="prev">
<span class="prev-{prev_lesson[exists]}">Prev:
<a href="{prev_lesson[href]}">{prev_lesson[num]}</a></span>
</td>
<td class="up">
Up: #LINK:LessonIndex(Index)
</td>
<td class="next">
<span class="next-{next_lesson[exists]}">Next:
<a href="{next_lesson[href]}">{next_lesson[num]}</a></span>
</td>
</tr>
</table>
<div class="description">Lesson {lesson[num]}: {lesson[desc]}</div>
<table class="lesson">
<tr>
<th>Character</th>
<th>Address</th>
<th>Command list</th>
</tr>
{m_timetable}
</table>
<table class="asm-navigation">
<tr>
<td class="prev">
<span class="prev-{prev_lesson[exists]}">Prev:
<a href="{prev_lesson[href]}">{prev_lesson[num]}</a></span>
</td>
<td class="up">
Up: #LINK:LessonIndex(Index)
</td>
<td class="next">
<span class="next-{next_lesson[exists]}">Next:
<a href="{next_lesson[href]}">{next_lesson[num]}</a></span>
</td>
</tr>
</table>

[Template:timetable]
<tr>
<td class="lessonCharacter">#R{pt_address}({character_num}) - {character}</td>
<td class="lessonAddress">{lesson_address}</td>
<td class="lesson">#R{cl_address}({cl_num}) - {cl_desc}</td>
</tr>

[Page:Keys]
PageContent=#INCLUDE(Keys)

[Keys]
<div class="details">
<div>Key = CHR$(Code)</div>
<div>
Address = Code + #w26624 (points to an entry in the table at #R26656)
</div>
<div>
Offset = PEEK(Address)
</div>
<div>
Lookup = Offset + #w26624 (points to an entry in the table at #R26624 or
#R26752)
</div>
<div>
Keycode = CHR$(PEEK(Lookup)) (copied to #R32764)
</div>
<div>
Routine = address at (Lookup + 1, Lookup + 2)
</div>
</div>
<table class="keytable">
<tr>
<th>Code</th>
<th>Key</th>
<th>Address</th>
<th>Offset</th>
<th>Lookup</th>
<th>Keycode</th>
<th>Routine</th>
<th>Purpose</th>
</tr>
#CALL:keypress_table_rows()
</table>

[Template:keypress_table_row]
<tr>
<td class="keyIndex">{index}</td>
<td class="key">{key}</td>
<td class="keyAddress">{address}</td>
<td class="keyOffset">{offset}</td>
<td class="keyAddress">{lookup}</td>
<td class="keycode">{keycode}</td>
<td class="keyAddress">{routine}</td>
<td class="keyPurpose">{purpose}</td>
</tr>
